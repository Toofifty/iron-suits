// Date: 12/04/2014 11:33:52 PM
// Template version 1.1
// Java generated by Techne
// Keep in mind that you still need to fill in some blanks
// - ZeuX

package me.toofifty.ironsuits.model;

import net.minecraft.client.model.ModelBiped;
import net.minecraft.client.model.ModelRenderer;
import net.minecraft.entity.Entity;

public class ModelExoBoots extends ModelBiped {
	// fields
	ModelRenderer rightbottom;
	ModelRenderer righttoe2;
	ModelRenderer righttoe1;
	ModelRenderer rightout;
	ModelRenderer rightback1;
	ModelRenderer rightback2;
	ModelRenderer rightconnector;
	ModelRenderer leftbottom;
	ModelRenderer lefttoe2;
	ModelRenderer lefttoe1;
	ModelRenderer leftout;
	ModelRenderer leftback1;
	ModelRenderer leftback2;
	ModelRenderer leftconnector;

	public ModelExoBoots(float f) {
		super(f, 0, 64, 32);
		
		textureWidth = 64;
		textureHeight = 32;

		rightbottom = new ModelRenderer(this, 0, 11);
		rightbottom.addBox(-2F, 12F, -2F, 4, 1, 4);
		rightbottom.setRotationPoint(0F, 0F, 0F);
		rightbottom.setTextureSize(64, 32);
		rightbottom.mirror = true;
		setRotation(rightbottom, 0F, 0F, 0F);

		righttoe2 = new ModelRenderer(this, 0, 0);
		righttoe2.addBox(-2F, 10F, -3F, 4, 1, 1);
		righttoe2.setRotationPoint(0F, 0F, 0F);
		righttoe2.setTextureSize(64, 32);
		righttoe2.mirror = true;
		setRotation(righttoe2, 0F, 0F, 0F);

		righttoe1 = new ModelRenderer(this, 0, 8);
		righttoe1.addBox(-2F, 11F, -4F, 4, 1, 2);
		righttoe1.setRotationPoint(0F, 0F, 0F);
		righttoe1.setTextureSize(64, 32);
		righttoe1.mirror = true;
		setRotation(righttoe1, 0F, 0F, 0F);

		rightout = new ModelRenderer(this, 0, 3);
		rightout.addBox(-3F, 11F, -2F, 1, 1, 4);
		rightout.setRotationPoint(0F, 0F, 0F);
		rightout.setTextureSize(64, 32);
		rightout.mirror = true;
		setRotation(rightout, 0F, 0F, 0F);

		rightback1 = new ModelRenderer(this, 0, 0);
		rightback1.addBox(-2F, 11F, 2F, 4, 1, 1);
		rightback1.setRotationPoint(0F, 0F, 0F);
		rightback1.setTextureSize(64, 32);
		rightback1.mirror = true;
		setRotation(rightback1, 0F, 0F, 0F);

		rightback2 = new ModelRenderer(this, 10, 6);
		rightback2.addBox(-1F, 10F, 2F, 2, 1, 1);
		rightback2.setRotationPoint(0F, 0F, 0F);
		rightback2.setTextureSize(64, 32);
		rightback2.mirror = true;
		setRotation(rightback2, 0F, 0F, 0F);

		rightconnector = new ModelRenderer(this, 12, 9);
		rightconnector.addBox(-3F, 10F, 0F, 1, 1, 1);
		rightconnector.setRotationPoint(0F, 0F, 0F);
		rightconnector.setTextureSize(64, 32);
		rightconnector.mirror = true;
		setRotation(rightconnector, 0F, 0F, 0F);

		leftbottom = new ModelRenderer(this, 0, 11);
		leftbottom.addBox(-2F, 12F, -2F, 4, 1, 4);
		leftbottom.setRotationPoint(0F, 0F, 0F);
		leftbottom.setTextureSize(64, 32);
		leftbottom.mirror = true;
		setRotation(leftbottom, 0F, 0F, 0F);
		
		lefttoe2 = new ModelRenderer(this, 0, 0);
		lefttoe2.addBox(-2F, 10F, -3F, 4, 1, 1);
		lefttoe2.setRotationPoint(0F, 0F, 0F);
		lefttoe2.setTextureSize(64, 32);
		lefttoe2.mirror = true;
		setRotation(lefttoe2, 0F, 0F, 0F);
		
		lefttoe1 = new ModelRenderer(this, 0, 8);
		lefttoe1.addBox(-2F, 11F, -4F, 4, 1, 2);
		lefttoe1.setRotationPoint(0F, 0F, 0F);
		lefttoe1.setTextureSize(64, 32);
		lefttoe1.mirror = true;
		setRotation(lefttoe1, 0F, 0F, 0F);
		
		leftout = new ModelRenderer(this, 0, 3);
		leftout.addBox(2F, 11F, -2F, 1, 1, 4);
		leftout.setRotationPoint(0F, 0F, 0F);
		leftout.setTextureSize(64, 32);
		leftout.mirror = true;
		setRotation(leftout, 0F, 0F, 0F);
		
		leftback1 = new ModelRenderer(this, 0, 0);
		leftback1.addBox(-2F, 11F, 2F, 4, 1, 1);
		leftback1.setRotationPoint(0F, 0F, 0F);
		leftback1.setTextureSize(64, 32);
		leftback1.mirror = true;
		setRotation(leftback1, 0F, 0F, 0F);
		
		leftback2 = new ModelRenderer(this, 10, 6);
		leftback2.addBox(-1F, 10F, 2F, 2, 1, 1);
		leftback2.setRotationPoint(0F, 0F, 0F);
		leftback2.setTextureSize(64, 32);
		leftback2.mirror = true;
		setRotation(leftback2, 0F, 0F, 0F);
		
		leftconnector = new ModelRenderer(this, 12, 9);
		leftconnector.addBox(2F, 10F, 0F, 1, 1, 1);
		leftconnector.setRotationPoint(0F, 0F, 0F);
		leftconnector.setTextureSize(64, 32);
		leftconnector.mirror = true;
		setRotation(leftconnector, 0F, 0F, 0F);

		this.bipedLeftLeg.addChild(leftbottom);
		this.bipedLeftLeg.addChild(lefttoe2);
		this.bipedLeftLeg.addChild(lefttoe1);
		this.bipedLeftLeg.addChild(leftout);
		this.bipedLeftLeg.addChild(leftback1);
		this.bipedLeftLeg.addChild(leftback2);
		this.bipedLeftLeg.addChild(leftconnector);

		this.bipedRightLeg.addChild(rightbottom);
		this.bipedRightLeg.addChild(righttoe2);
		this.bipedRightLeg.addChild(righttoe1);
		this.bipedRightLeg.addChild(rightout);
		this.bipedRightLeg.addChild(rightback1);
		this.bipedRightLeg.addChild(rightback2);
		this.bipedRightLeg.addChild(rightconnector);
	}

	public void render(Entity entity, float f, float f1, float f2, float f3,
			float f4, float f5) {
		super.render(entity, f, f1, f2, f3, f4, f5);
		setRotationAngles(f, f1, f2, f3, f4, f5, entity);
	}

	private void setRotation(ModelRenderer model, float x, float y, float z) {
		model.rotateAngleX = x;
		model.rotateAngleY = y;
		model.rotateAngleZ = z;
	}

}
