"""
Model Cleaner script
Cleans messy .java outputs from
Techne to awesome IronSuitsModel .ism
files, for use with IronSuits

Warning: doesn't bind pieces to biped
pieces, you'll have to do this manually.
(Can't get that from the Java code, duh)

@author: Toofifty
http://iron-suits.toofifty.me/
"""

import sys
import os
import re

args = sys.argv[:]

OBJECTS = 0

def get_text(file):
    if not(os.path.exists(file + '.java')):
        print('File not found: ' + file + '.java')
        print('Ensure the directory is correct and try again.')
        sys.exit()
    else:
        with open(file + '.java', 'r') as jfile:
            lines = jfile.read()
        return lines
        
def clean(text):
    print 'Cleaning lines...'
    out = ''
    texture_size = False
    object_pattern = re.compile(r'(.*?) = new ModelRenderer\(this, ([\d-]+), ([\d-]+)\);')
    object_box = re.compile(r'(.*?).addBox\(([\d\.-]+)F, ([\d\.-]+)F, ([\d\.-]+)F, ([\d-]+), ([\d-]+), ([\d-]+)\);')
    object_texture_size = re.compile(r'(.*?).setTextureSize\(([\d-]+), ([\d-]+)\)')
    object_rotation = re.compile(r'setRotation\((.*?), ([\d\.-]+)F, ([\d\.-]+)F, ([\d\.-]+)F\)')
    for line in text.split('\n'):
        op_match = object_pattern.match(line.strip())
        if op_match is not None:
            obj_name = op_match.group(1)
            global OBJECTS
            OBJECTS += 1
            obj_tX = op_match.group(2)
            obj_tY = op_match.group(3)
            
        ob_match = object_box.match(line.strip())
        if ob_match is not None:
            obj_pos = [ob_match.group(2), ob_match.group(3), ob_match.group(4)]
            obj_size = [ob_match.group(5), ob_match.group(6), ob_match.group(7)]
            
        # They'll all have the same texture size, so we'll only do this once.
        if texture_size is False:
            ots_match = object_texture_size.match(line.strip())
            if ots_match is not None:
                texture_size = True
                out = out + '!texturesize:[%s,%s]\n\ngroupme! {\n' % (ots_match.group(2), ots_match.group(3))
        
        or_match = object_rotation.match(line.strip())
        if or_match is not None:
            # Should be last line of the object, if Techne gets it right.
            # So I guess we'll add the new line here.
            obj_rot = [or_match.group(2), or_match.group(3), or_match.group(4)]
            out = out + '\t"%s": [%s, %s]; [%s, %s, %s]; [%s, %s, %s]; [%s, %s, %s]\n' \
                % (obj_name, obj_tX, obj_tY, obj_pos[0], obj_pos[1], obj_pos[2],
                obj_size[0], obj_size[1], obj_size[2], 
                obj_rot[0], obj_rot[1], obj_rot[2])
    out = out + '}\n'
    
    return out
    
def write_file(file, text):
    print 'Writing to file %s.ism...' % (file)

    global OBJECTS
    header = '#============================================#\n\tGenerated by Toofifty\'s Modelcleaner\n\tRemember to group the objects by\n\tbiped pieces!\n\tTotal objects: %s\n#============================================#\n\n' % (OBJECTS)
    text = header + text
    if not os.path.exists(os.getcwd() + '/clean'):
        print 'Creating \clean\ directory...'
        os.mkdir(os.getcwd() + '/clean')
    with open(os.getcwd() + '/clean/' + file + '.ism', 'w') as outfile:
        outfile.write(text)
    print 'Finished! Your file can be found in \clean\%s.ism' % file
            
            
def main():
    print '\n======== Toofifty\'s IronSuits Modelcleaner ========\n'
    if len(args) < 2:
        print 'Insufficient arguments, provide a .java'\
              ' file as your third argument.'
        sys.exit()
    java = get_text(args[1])
    write_file(args[1], clean(java))

if __name__ == '__main__':
    main()